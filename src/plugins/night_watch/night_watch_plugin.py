"""
–†—è–¥–æ–≤–æ–π –Ω–æ—á–Ω–æ–π —Å—Ç—Ä–∞–∂–∏
"""
import random
from datetime import datetime
from threading import Timer

import pytils
import telegram

from src.config import CONFIG
from src.modules.khaleesi import Khaleesi
from src.utils.cache import cache

CACHE_KEY = 'night_watch'


def all_s_well(bot: telegram.Bot) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–∏–ø–∞ "12 —á–∞—Å–æ–≤ –∏ –≤—Å–µ —Å–ø–æ–∫–æ–π–Ω–æ"
    """
    if 'anon_chat_id' not in CONFIG:
        return
    text = f'{Khaleesi.khaleesi(get_hour(datetime.now()))} üêâ'
    bot.send_message(CONFIG['anon_chat_id'], text)


def get_hour(now: datetime) -> str:
    """
    –û—Ç—Å—ã–ª–∫–∞ –∫ –ü—Ä–∞—Ç—á–µ—Ç—Ç—É.
    """
    hour = int(now.strftime("%I"))
    plural = pytils.numeral.sum_string(hour, pytils.numeral.MALE, '—á–∞—Å, —á–∞—Å–∞, —á–∞—Å–æ–≤')
    return f'{plural} –∏ –≤—Å–µ —Å–ø–æ–∫–æ–π–Ω–æ!'.upper()


def postpone_our_phrase(bot: telegram.Bot) -> None:
    """
    –ß–µ—Ä–µ–∑ —Å–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é `all_s_well`
    """
    wait = how_long_we_should_wait()
    timer = Timer(wait, all_s_well, args=[bot])
    timer.start()


def go_go_watchmen(bot: telegram.Bot) -> None:
    """
    –°—Ç—Ä–∞–∂–Ω–∏–∫ —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ —á–∞—Å—ã: –∞ –ø–æ—Ä–∞ –ª–∏ —É–∂–µ –∏–¥—Ç–∏ –≤ –¥–æ–∑–æ—Ä?
    """
    # —Å—Ç—Ä–∞–∂–Ω–∏–∫ –≤—ã—Ö–æ–¥–∏—Ç –Ω–∞ —Ä–∞–±–æ—Ç—É –≤ 22 —á–∞—Å–∞
    if datetime.now().hour not in (22, 23,):
        return

    # –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –º–µ—Ç–æ–¥ –≤—ã–∑–≤–∞–Ω –∏ –≤ 22, –∏ –≤ 23
    # –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
    if cache.get(f'{CACHE_KEY}:patrols', False):
        return
    cache.set(f'{CACHE_KEY}:patrols', True, time=10 * 60 * 60)

    # —á–µ—Ä–µ–∑ —Å–ª—É—á–∞–π–Ω—ã–µ N —á–∞—Å–æ–≤ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é all_s_well
    postpone_our_phrase(bot)


def how_long_we_should_wait() -> int:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ –æ—Ç 1 –¥–æ 6 —á–∞—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    """
    hour = 60 * 60
    wait = random.randint(1 * hour, 6 * hour)
    return wait
